
# 从工作流生成的工作流运行的名称，如果省略，则使用提交时的commit信息 /可自定义
run-name: Deploy by @${{ github.actor }}


# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
on:
  push:
    branches:
      - main

# 任务
jobs:
  # 定义一个job，名字为CI
  serve-pages:
    # 使用github提供给我们的机器去跑
    runs-on: ubuntu-latest
    # 步骤
    steps:
      # 拉取最新的代码
      - name: Checkout repository
        uses: actions/checkout@v2
      # 安装node环境
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      # 缓存 npm node_modules
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      # 安装依赖 npm
      - name: Install dependencies
        # 如果没有命中缓存才执行 npm install
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm install
      # 打包
      - name: Build
        run: npm run docs:build 
        with:
          BRANCH: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
          FOLDER: docs/.vitepress/dist # vitepress 生成的静态文件存放的地方
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret
  # 多个任务
  my-server:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v2
        with:
          node-version: "16.x"
          cache: 'npm'
          persist-credentials: false

      # 生成静态文件
      - name: Build
        run: npm install && npm run docs:build
      #命名这个任务为发布Deploy
      - name: Deploy-myserver
        # 因为构建之后，需要把代码上传到服务器上，所以需要连接到ssh，并且做一个拷贝操作
        uses: cross-the-world/scp-pipeline@master
        env:
          WELCOME: "ssh scp ssh pipelines"
          LASTSSH: "Doing something after copying"
        with:
          host: ${{ secrets.USER_HOST }}
          user: ${{ secrets.USER_NAME }}
          pass: ${{ secrets.USER_PASS }}
          connect_timeout: 10s
          local: 'docs/.vitepress/dist/*'
          remote: /home/www/blog-docs/    # 成的静态文件存放的地方


#  - name: Deploy
#         # 这个是第三方提供的库，可以推送打包后的内容到指定分支
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           # 这边需要设置第二步获取到的deploy key，否则会提示没有权限推送代码
#           deploy_key: ${{ secrets.VUE3STUDY }}
#           # 推送到该仓库中，地址格式为github名称/仓库名
#           external_repository: xxx/xxx
#           # 推送的分支
#           publish_branch: gh-pages
#           # 推送的内容
#           publish_dir: docs/.vuepress/dist



