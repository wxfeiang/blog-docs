# name 可以自定义
name: Deploy GitHub Pages

# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
on:
  push:
    branches:
      - main

# 任务
# 部署了多个任务 也可拆分到 第二yml 文件中 
# 多个jobs 最好是分开
jobs:
  server-gitpages:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 拉取代码
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      # 安装node环境 可省略
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      #为node_modules设置缓存
      - name: Cache
        # 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          # 缓存文件目录的路径
          path: |
            **/node_modules
          key: ${{runner.OS}}
      # 安装依赖
      - name: Installing Dependencies
        # 如果命中缓存，就不需要安装依赖，使用缓存即可
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm install && npm run docs:build
      # 生成静态文件
      - name: Build
        run: npm install 
      # 部署到 GitHub Pages
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret
          BRANCH: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
          FOLDER: docs/.vitepress/dist # vitepress 生成的静态文件存放的地方
        # 命名这个任务为发布Deploy
      - name: Deploy-myserver
        # 因为构建之后，需要把代码上传到服务器上，所以需要连接到ssh，并且做一个拷贝操作
        uses: cross-the-world/scp-pipeline@master
        env:
          WELCOME: "ssh scp ssh pipelines"
          LASTSSH: "Doing something after copying"
        with:
          host: ${{ secrets.USER_HOST }}
          user: ${{ secrets.USER_NAME }}
          pass: ${{ secrets.USER_PASS }}
          connect_timeout: 10s
          local: 'docs/.vitepress/dist/*'
          remote: /home/www/blog-docs/    # 成的静态文件存放的地方



  # 多个任务
  # my-server:
  #   # 服务器环境：最新版 Ubuntu
  #   runs-on: ubuntu-latest
  #   steps:
  #     # 拉取代码
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         node-version: "16.x"
  #         cache: 'npm'
  #         persist-credentials: false

  #     # 生成静态文件
  #     - name: Build
  #       run: npm install && npm run docs:build

  #     # 部署到 GitHub Pages
  #  # 命名这个任务为发布Deploy
  #     - name: Deploy-myserver
  #       # 因为构建之后，需要把代码上传到服务器上，所以需要连接到ssh，并且做一个拷贝操作
  #       uses: cross-the-world/scp-pipeline@master
  #       env:
  #         WELCOME: "ssh scp ssh pipelines"
  #         LASTSSH: "Doing something after copying"
  #       with:
  #         host: ${{ secrets.USER_HOST }}
  #         user: ${{ secrets.USER_NAME }}
  #         pass: ${{ secrets.USER_PASS }}
  #         connect_timeout: 10s
  #         local: 'docs/.vitepress/dist/*'
  #         remote: /home/www/blog-docs/    # 成的静态文件存放的地方



