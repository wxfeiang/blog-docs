import{_ as p,c as a,o as e,X as n}from"./chunks/framework.85c6c661.js";const u=JSON.parse('{"title":"npm｜pnpm","description":"","frontmatter":{"title":"npm｜pnpm"},"headers":[],"relativePath":"src/package/index.md","filePath":"src/package/index.md"}'),t={name:"src/package/index.md"},s=n('<h1 id="包管理方式" tabindex="-1">包管理方式 <a class="header-anchor" href="#包管理方式" aria-label="Permalink to &quot;包管理方式&quot;">​</a></h1><h2 id="安装方式" tabindex="-1">安装方式 <a class="header-anchor" href="#安装方式" aria-label="Permalink to &quot;安装方式&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-XvAHW" id="tab-MmjOozV" checked="checked"><label for="tab-MmjOozV">windows</label><input type="radio" name="group-XvAHW" id="tab-QZEsR1L"><label for="tab-QZEsR1L">Mac</label><input type="radio" name="group-XvAHW" id="tab-Gc8Noj1"><label for="tab-Gc8Noj1">Linux</label></div><div class="blocks"><div class="language-init active"><button title="Copy Code" class="copy"></button><span class="lang">init</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">去github  nvm 找到 nvm-setup.zip 点击下载</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">brew install nvm</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">yum -y install nvm</span></span></code></pre></div></div></div><p><a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">下载最新的</a></p><h2 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm&quot;">​</a></h2><ul><li>离线安装</li></ul><p>查看当前版本 执行以下命令查看已安装的 pnpm 版本：</p><p>pnpm -v 升级 pnpm 执行以下命令升级 pnpm：</p><p>pnpm i -g pnpm</p><p>其中 -g 表示全局安装。</p><p>如果你希望升级到指定版本，可以使用以下命令：</p><p>pnpm i -g pnpm@指定版本号 例如：</p><p>pnpm i -g pnpm@6.7.3</p><p>pnpm add -g pnpm to update 验证升级结果 执行以下命令验证 pnpm 是否升级成功：</p><p>pnpm -v</p><p>步骤一：生成离线安装包 首先，我们需要在有网络连接的机器上，使用 npm pack 命令来生成 pm2 和 pnpm 的离线安装包。npm pack 命令可以将一个 npm 包打包成一个 .tgz 文件，包含了该包的所有依赖和元数据。我们可以使用 --pack-destination 参数来指定输出文件夹，例如：</p><p>npm pack -g pm2 --pack-destination ~/Desktop npm pack -g pnpm --pack-destination ~/Desktop 这样，我们就会在 offline 文件夹下得到两个 .tgz 文件，分别是 pm2-5.1.2.tgz 和 pnpm-6.23.6.tgz（版本号可能不同）。</p><p>步骤二：拷贝到服务器 接下来，我们需要将这两个 .tgz 文件拷贝到目标服务器上，可以使用 scp、ftp 或其他任何方式。假设我们将它们放在了 /home/user/offline 文件夹下。</p><p>步骤三：安装 最后，我们可以在服务器上使用 npm -g i 命令来安装这两个 .tgz 文件，例如：</p><p>npm -g i /home/user/offline/pm2-5.1.2.tgz npm -g i /home/user/offline/pnpm-6.23.6.tgz 这样，我们就完成了 pm2 和 pnpm 的离线安装。我们可以使用 pm2 -v 和 pnpm -v 来验证安装是否成功。</p><p>brew install pnpm</p>',21),i=[s];function l(o,c,m,r,d,g){return e(),a("div",null,i)}const b=p(t,[["render",l]]);export{u as __pageData,b as default};
